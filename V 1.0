// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Going4Great Gareth is Awesome yay

//By Gareth

//@version=5

indicator("10 EMA Strategy", overlay=true)

//DEBUG TABLE
var table tblDebug = table.new(position.top_right, 4, 10, border_width=1, bgcolor=color.black, frame_width=2, frame_color=color.black)
var table tbltrade = table.new(position.top_center, 3, 5, border_width=1, bgcolor=color.black, frame_width=2, frame_color=color.black)

// Setting time
alrtHours = input.session(title='First 20 Minutes', defval='0930-0950') //defval='0947-1400')
alrtHours2 = input.session(title='All day session', defval='0930-1400')
alrtHours3  = input.session(title='Premarket Time', defval='0400-0930')
alrtHours4 = input.session(title='Open to All Trades', defval='1030-1400')
alrtHours5 = input.session(title='After first 20 Min', defval='0950-1400')

yourrisk = input.int(defval = 100, title ="Your Risk $")
yourreward = input.float(defval = 1.3, title ="Your Target (in R's)")

isOborOs = input.bool(defval = false, title = "Ignore Entry if OS/OB")


// Check if bar falls within alert time
InSession(sess) =>
    na(time(timeframe.period, sess)) == false

alrtTrade = InSession(alrtHours) // first 20 minutes
alrtTrade2 = InSession(alrtHours2) // all day open - close
alrtTrade3 = InSession(alrtHours3) // pre market hours
opentoall = InSession(alrtHours4) // after first hour
alrtTrade5 = InSession(alrtHours5) // after first 20 minutes

// Declare Labels
var ln_max = line.new(na, na, na, na, extend=extend.none, color=color.green, width=2)
var ln_min = line.new(na, na, na, na, extend=extend.none, color=color.red, width=2)

var ln_profitbull = line.new(na, na, na, na, extend=extend.none, color=color.black, width=2)
var ln_profitbear = line.new(na, na, na, na, extend=extend.none, color=color.black, width=2)

// is it first bar
t = time("1440", session.regular) // 1440=60*24 is the number of minutes in a whole day. You may use "0930-1600" as second session parameter
//plot(t, style=linebr) // Uncomment for better understanding
is_first = na(t[1]) and not na(t) or t[1] < t


// Get and Plot 10 EMA
EMA10 = ta.ema(close, 10)
plot(EMA10)
EMA20 = ta.ema(close, 20)
plot(EMA20, color = color.white)

// Show ATR Values
atr14 = ta.atr(14)
atr1 = ta.atr(1)
vatr14 = request.security(syminfo.tickerid, "D", atr14, lookahead=barmerge.lookahead_on)
vatr11 = request.security(syminfo.tickerid, "D", atr1, lookahead=barmerge.lookahead_on)

atrpercent = (vatr11/vatr14) * 100
coloratr = atrpercent > 79 ? color.orange :color.yellow

table.cell(tblDebug, 0, 3,"ATR (14): $" + str.tostring(vatr14,"#.##"),  text_color=color.yellow, text_size = size.large)
table.cell(tblDebug, 0, 4,"Todays Range: $"  + str.tostring(vatr11,"#.##") + " (" + str.tostring(atrpercent,"#.#") + "%)",  text_color=coloratr, text_size = size.large)


// Get extended and regular EMA
textend = ticker.new(syminfo.prefix, syminfo.ticker, session.regular)
textend2 = ticker.modify(textend, session.extended)

c1 = request.security(textend, "3", ta.ema(close, 10), lookahead=barmerge.lookahead_on)
c2 = request.security(textend2, "3", ta.ema(close, 10) ,lookahead=barmerge.lookahead_on)


//table.cell(tblDebug, 0, 1,"EMA Normal: " + str.tostring(c1) + " EMA EXTEND: "  + str.tostring(c2),  text_color=color.green)

// Calculate moving average
vwapValue = ta.vwap(close)
// Plot value
plot(series=vwapValue, color=color.teal, linewidth=2)

// Get Previous Day H/L
[D_High, H_Today] = request.security(syminfo.tickerid, 'D', [high[1],high],lookahead=barmerge.lookahead_on)
[D_Low, L_Today] = request.security(syminfo.tickerid, 'D', [low[1],low],lookahead=barmerge.lookahead_on)
[D_Close, C_2,C_3, C_Today] = request.security(syminfo.tickerid, 'D', [close[1],close[2],close[3],close],lookahead=barmerge.lookahead_on)
[D_Open, O_2,O_3,O_Today] = request.security(syminfo.tickerid, 'D', [open[1],open[2],open[3],open],lookahead=barmerge.lookahead_on)

Thigh = request.security(syminfo.tickerid, 'D', high,lookahead=barmerge.lookahead_on,gaps=barmerge.gaps_off)
Tlow = request.security(syminfo.tickerid, 'D',low,lookahead=barmerge.lookahead_on,gaps=barmerge.gaps_off)
Tclose = request.security(syminfo.tickerid, 'D',close,lookahead=barmerge.lookahead_on,gaps=barmerge.gaps_off)
Topen = request.security(syminfo.tickerid, 'D',open,lookahead=barmerge.lookahead_on,gaps=barmerge.gaps_off)

//Check for 3 Bear/Bull Candles on the daily
if D_Close > D_Open and C_2 > O_2 and  C_3 > O_3
    table.cell(tblDebug, 0, 1,"3 Bull Daily Candles - Be Quick with exit or patient on entries",  text_color=color.red)

if D_Close < D_Open and C_2 < O_2 and  C_3 < O_3
    table.cell(tblDebug, 0, 1,"3 Bear Daily Candles - Be Quick with exit or patient on entries",  text_color=color.red)
    
if not (D_Close < D_Open and C_2 < O_2 and  C_3 < O_3) and not (D_Close > D_Open and C_2 > O_2 and  C_3 > O_3)
    table.cell(tblDebug, 0, 1,"", bgcolor=color.new(color.gray,100), text_color=color.red)


//table.cell(tblDebug, 0, 5,"Inside On Daily "  + str.tostring(rsi1,"#.##"),  text_color=color.red)


// RSI
rsiValue = ta.rsi(close, 14)
rsiD =  request.security(syminfo.tickerid, 'D',rsiValue,lookahead=barmerge.lookahead_on)
rsi4 =  request.security(syminfo.tickerid, '240',rsiValue,lookahead=barmerge.lookahead_on)
rsi2 =  request.security(syminfo.tickerid, '120',rsiValue,lookahead=barmerge.lookahead_on)
rsi1 =  request.security(syminfo.tickerid, '60',rsiValue,lookahead=barmerge.lookahead_on)
rsi15 =  request.security(syminfo.tickerid, '15',rsiValue,lookahead=barmerge.lookahead_on)
rsi5 =  request.security(syminfo.tickerid, '5',rsiValue,lookahead=barmerge.lookahead_on)

color1 = rsi1 > 70 or rsi1 < 30 ? color.red :color.white
color2 = rsi15 > 70 or rsi15 < 30 ? color.red :color.white
color3 = rsi5 > 70 or rsi5 < 30 ? color.red :color.white

overbought = (rsi15 > 70) and (rsi5 > 70)
oversold = (rsi15 < 30) and (rsi5 < 30)

off = (overbought and isOborOs) or (oversold and isOborOs)

//table.cell(tblDebug, 0, 5,"RSI 1 HR: "  + str.tostring(rsi1,"#.##"),  text_color=color1)
//table.cell(tblDebug, 0, 6,"RSI 15 Min: "  + str.tostring(rsi15,"#.##"),  text_color=color2)
//table.cell(tblDebug, 0, 7,"RSI 5 Min: "  + str.tostring(rsi5,"#.##"),  text_color=color3)


plot(timeframe.isintraday ? D_High : na, title='Daily High', style=plot.style_circles, color=color.new(color.red, 0), linewidth=2)
plot(timeframe.isintraday ? D_Low : na, title='Daily Low', style=plot.style_circles, color=color.new(color.orange, 0), linewidth=2)


// Initialize Flag Arrayand
var myArray = array.new_bool(20)
var myArray1 = array.new_float(11)
// var bool bulltrade = false
    
if not alrtTrade3 and not alrtTrade2
    array.set(myArray, 0, false)
    array.set(myArray, 1, false)   
    array.set(myArray, 2, false)
    array.set(myArray, 3, false)    
    array.set(myArray, 4, false)    
    array.set(myArray, 5, false)
    array.set(myArray, 6, false)    // Can Trade after first 20 minutes
    array.set(myArray, 7, false)   // Gap  
    array.set(myArray, 8, false)
    array.set(myArray, 9, false)
    array.set(myArray, 10, false) //Can trade first 20 Minutes
    array.set(myArray, 11, false)   // Entering trade by corssing entry line BULL 
    array.set(myArray, 12, false)    // Entering trade by corssing entry line Bear 
    array.set(myArray, 13, false)   // Crossing Take Profit Flag Bull
    array.set(myArray, 14, false)    // Crossing Take Profit Flag Bear 
    array.set(myArray, 15, false)   // Crossing Stop BULL
    array.set(myArray, 16, false)    // Crossing Stop Bear
    bulltrade = false
    beartrade = false
    array.set(myArray1, 0, 0)
    array.set(myArray1, 1, 0)   
    array.set(myArray1, 2, 0)
    array.set(myArray1, 3, 0)    
    array.set(myArray1, 4, 0)    
    array.set(myArray1, 5, 0)
    array.set(myArray1, 6, 0)
    array.set(myArray1, 7, 0)
    array.set(myArray1, 8, 0)    
    array.set(myArray1, 9, 0)
    array.set(myArray1, 10, 0)    

    
// Can Trade first 20 minute if Opens Above or Below Prev Days High Low
if open > D_High and is_first
    array.set(myArray, 10, true)
    array.set(myArray1, 10, low)
    
if open < D_Low and is_first
    array.set(myArray, 10, true)
    array.set(myArray1, 10, high) 


    
// END DETECT GAPS

//table.cell(tbltrade, 0,2 , " Prev High:  " + str.tostring(D_High) + " Open " + str.tostring(open),  text_color=color.yellow)
//table.cell(tbltrade, 1,2 , " Prev Low:  " + str.tostring(D_Low) + " FLAG first 20: " + str.tostring(array.get(myArray,10)),  text_color=color.yellow)

// Can Trade first 20 minutes if Crosses Previous Day High/Low
if (close > D_High) or (close < D_Low) and alrtTrade
    array.set(myArray, 6, true)    

//table.cell(tbltrade, 0, 2, "Yesterday Open:  " + str.tostring(D_Open) + " \n Yesterday Close:  " + str.tostring(D_Close),  text_color=color.yellow)

// Can Trade first 20 minute if Bull candle Below Prev Open or Bear Candle Gapping Above Previous Open
if (D_Close > D_Open) and (open < D_Open) and is_first //Bull Candle Below Previous Open
    array.set(myArray, 6, true)
    

if (D_Close < D_Open) and (D_Open < open) and is_first  //Bear Candle Above Previous Open
    array.set(myArray, 6, true)

if array.get(myArray,10) and is_first and barstate.isconfirmed
    alert("Trade 10 EMA in 1st 20 Minutes", alert.freq_once_per_bar)
    table.cell(tbltrade, 0,1 , "Can Trade In 1st 20 Minutes ",  text_color=color.yellow)
else if array.get(myArray,6) and not array.get(myArray,10)
    table.cell(tbltrade, 0,1 , "Trade AFTER first 20 Minutes ",  text_color=color.yellow)
else if not array.get(myArray,10) and not array.get(myArray,6) 
    table.cell(tbltrade, 0,1 , " Happy Trading ",  text_color=color.yellow)
    
if alrtTrade and array.get(myArray, 6)
    array.set(myArray, 7, true)
else
    array.set(myArray, 7, false)
    
//table.cell(tbltrade, 0, 1,"Array 10: " + str.tostring(array.get(myArray, 10)) + "\n Array 6: " + str.tostring(array.get(myArray, 6)) + "\n Array 7: " + str.tostring(array.get(myArray, 7)),  text_color=color.yellow)

gapabovebelow = array.get(myArray, 10) and alrtTrade
after20min = array.get(myArray, 6) and alrtTrade5

//bulltrade = ((open > close) and (close > c1) and (close > c2)) and ((array.get(myArray, 7) or opentoall or array.get(myArray, 10)) )
beartrade = ((open < close) and (close < c1) and (close < c2)) and ((gapabovebelow or opentoall or after20min )) and not off

bulltrade = ((open > close) and (close > c1) and (close > c2)) and (gapabovebelow or opentoall or after20min ) and not off

plotshape(bulltrade, style = shape.triangleup, location = location.belowbar, color = color.green, text = "T")
plotarrow(bulltrade ? 1: na, colorup = color.green, maxheight = 10)
plotshape(beartrade, style = shape.triangledown, location = location.abovebar, color = color.red, text = "T")
plotarrow(beartrade ? -1: na, colordown = color.red, maxheight = 10)

//barColour = ((open > close) and (close > c1) and (close > c2)) and (array.get(myArray, 7) or opentoall or array.get(myArray, 10) ) ? color.purple :na
barColour = ((open > close) and (close > c1) and (close > c2)) and ((gapabovebelow or opentoall or after20min ) )  and not off ? color.purple :na
barcolor(color=barColour) 

if (open > close) and (close > c1) and (close > c2) and alrtTrade2 and array.get(myArray, 6)
    array.set(myArray, 0, true)


barColour3 = ((open < close) and (close < c1) and (close < c2)) and ((gapabovebelow or opentoall or after20min ))  and not off ? color.yellow :na
//barColour3 = ((open < close) and (close < c1) and (close < c2)) and (array.get(myArray, 7) or opentoall or array.get(myArray, 10) ) ? color.yellow :na
barcolor(color=barColour3) 

if (open < close) and (close < c1) and (close < c2) and alrtTrade2
    array.set(myArray, 2, true)

countbullbars = bulltrade and not array.get(myArray, 4) and not array.get(myArray, 8) // USED as art of check for 5 candles after trade entry

// DRAW BULL LINES
if barstate.isconfirmed and bulltrade and not array.get(myArray, 4) and not array.get(myArray, 8) //
    line.set_xy1(id = ln_max, x = bar_index, y = high)
    line.set_xy2(id = ln_max, x = bar_index + 6, y = high)
//    stop = 
    line.set_xy1(id = ln_min, x = bar_index , y = low < EMA10 ? low - (high - low) : EMA10)
    line.set_xy1(id = ln_min, x = bar_index , y = low < EMA10 ? (low - (high - low)) : EMA10)    
    line.set_xy2(id = ln_min, x = bar_index + 6, y = low < EMA10 ? low - (high - low) : EMA10)
//    table.cell(tbltrade, 2,2 , " EMA EXT " + str.tostring(c2),  text_color=color.yellow)
    tom = low < EMA10 ? low - (high - low) : EMA10
    line.set_xy1(id = ln_profitbull, x = bar_index , y = ((high - tom) * yourreward) + high )
    line.set_xy2(id = ln_profitbull, x = bar_index + 6, y = ((high - tom) * yourreward) + high )    
    alert("10 EMA: Long Entry", alert.freq_once_per_bar)
    array.set(myArray, 4, true)
    array.set(myArray, 8, true)
    array.set(myArray, 9, false)
    tradeshares = yourrisk/(high - tom)
    myLabel = label.new(size = size.large, x=bar_index, y = high, color=color.green, text='Buy LMT: ' + str.tostring(high, "#.##") + "\n Shares: " + str.tostring(tradeshares,"#") + " \n Stop SELL: " + str.tostring(low < EMA10 ? low - (high - low): EMA10, "#.##")  + "\n Capital (6:1): " + str.tostring((tradeshares * high)/6,"#") + "\n Target " + str.tostring(((high - tom) * yourreward) + high, "#.##"), textcolor=color.white, style=label.style_label_down, yloc=yloc.abovebar)
    myLabel
    array.set(myArray1, 0, high) // set entry point
    array.set(myArray1, 2, ((high - tom) * yourreward) + high)// set target
    array.set(myArray1, 4, low < EMA10 ? low - (high - low): EMA10) // set stop    

countbearbars = beartrade and not array.get(myArray, 5) and not array.get(myArray, 9) // USED as art of check for 5 candles after trade entry

if barstate.isconfirmed and beartrade and not array.get(myArray, 5) and not array.get(myArray, 9)
    line.set_xy1(id = ln_min, x = bar_index, y = high > EMA10 ? high + (high - low) : EMA10)
    line.set_xy2(id = ln_min, x = bar_index + 6, y = high > EMA10 ? high + (high - low) : EMA10)
    line.set_xy1(id = ln_max, x = bar_index, y = low)
    line.set_xy2(id = ln_max, x = bar_index + 6, y = low)
    tom = high > EMA10 ? high + (high - low) : EMA10
    line.set_xy1(id = ln_profitbear, x = bar_index , y = low - ((tom - low) * yourreward))
    line.set_xy2(id = ln_profitbear, x = bar_index + 6, y = low - ((tom - low) * yourreward) )       
    array.set(myArray, 5, true)
    alert("10 EMA: Short Entry", alert.freq_once_per_bar)
    array.set(myArray, 9, true)
    array.set(myArray, 8, false)
    tradeshares = yourrisk/(tom-low)
    myLabel = label.new(size = size.large,x=bar_index, y = high, color=color.red, text='Sell LMT: ' + str.tostring(low, "#.##") + "\n Shares: " + str.tostring(tradeshares,"#") + " \n Stop BUY: " + str.tostring(tom, "#.##") + "\n Capital (6:1): " + str.tostring((tradeshares * low)/6,"#") + "\n Target " + str.tostring(low - ((tom - low) * yourreward), "#.##"), textcolor=color.white, style=label.style_label_up, yloc=yloc.belowbar)
    myLabel
    array.set(myArray1, 1, low)                                 // set entry
    array.set(myArray1, 3, low - ((tom - low) * yourreward) )  // set target 



// Check Bars Since Trade Activated
WaitTradeBull = ta.barssince(countbullbars)
WaitTradeBear = ta.barssince(countbearbars)

// Check to see if 5 bars (15 Minutes) have passed and we need to cancel trade

if (WaitTradeBull > 0 and WaitTradeBull <6) and ta.crossover(high, array.get(myArray1, 0))     //crossing entry line
    array.set(myArray, 11, true) // set crossing entry flag as true
//    table.cell(tbltrade, 1,2 , " Entered ",  text_color=color.yellow)
//else if not array.get(myArray,11)
//    table.cell(tbltrade, 1,2 , " Waiting ",  text_color=color.yellow)

if WaitTradeBull > 1 and (ta.crossover(high,array.get(myArray1, 2)))     //crossing take profit
    array.set(myArray, 13, true) // set crossing entry flag as true
//    table.cell(tbltrade, 1,1 , " Take Profit " + str.tostring(array.get(myArray1, 2)),  text_color=color.yellow)
//else if not array.get(myArray, 13) 
//    table.cell(tbltrade, 1,1 , " Waiting ",  text_color=color.yellow)
    
if WaitTradeBull > 0 and (ta.cross(low,array.get(myArray1, 4))) and array.get(myArray,11) and not array.get(myArray,13)    //check if stopped out
    array.set(myArray, 15, true) // set crossing entry flag as true
//    table.cell(tbltrade, 1,1 , " Stopped Out ",  text_color=color.yellow)
 
//if (WaitTradeBull == 5) and not array.get(myArray,11) and not array.get(myArray,15)
//    table.cell(tbltrade, 0, 2, "Close Trade: Not Triggered in Time  ",  text_color=color.red)
//else if WaitTradeBull > 6 and array.get(myArray,11) and not array.get(myArray,13) and array.get(myArray,15)                                        //if 7 bars and has crossed entry line but not take profit
//    table.cell(tbltrade, 0, 2, str.tostring(WaitTradeBull) + " Can move stop  " + str.tostring(array.get(myArray1, 2)) + " ",  text_color=color.green) 
//else 
//    table.cell(tbltrade, 0, 2, " Have a nice day ",  text_color=color.yellow)


if (WaitTradeBear > 0 and WaitTradeBear <6) and ta.cross(close, array.get(myArray1, 1)) //crossing entry line
    array.set(myArray, 12, true)
